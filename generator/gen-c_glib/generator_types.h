/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef GENERATOR_TYPES_H
#define GENERATOR_TYPES_H

/* base includes */
#include <glib-object.h>
#include <thrift/c_glib/thrift_struct.h>
#include <thrift/c_glib/protocol/thrift_protocol.h>
/* custom thrift includes */

/* begin types */

/* struct Node */
struct _Node
{ 
  ThriftStruct parent; 

  /* public */
  GHashTable * props;
  gboolean __isset_props;
  GPtrArray * labels;
  gboolean __isset_labels;
};
typedef struct _Node Node;

struct _NodeClass
{
  ThriftStructClass parent;
};
typedef struct _NodeClass NodeClass;

GType node_get_type (void);
#define TYPE_NODE (node_get_type())
#define NODE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NODE, Node))
#define NODE_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NODE, NodeClass))
#define IS_NODE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NODE))
#define IS_NODE_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NODE))
#define NODE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NODE, NodeClass))

/* struct Response */
struct _Response
{ 
  ThriftStruct parent; 

  /* public */
  gchar * text;
  gboolean __isset_text;
  GPtrArray * nodes;
  gboolean __isset_nodes;
};
typedef struct _Response Response;

struct _ResponseClass
{
  ThriftStructClass parent;
};
typedef struct _ResponseClass ResponseClass;

GType response_get_type (void);
#define TYPE_RESPONSE (response_get_type())
#define RESPONSE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_RESPONSE, Response))
#define RESPONSE_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_RESPONSE, ResponseClass))
#define IS_RESPONSE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_RESPONSE))
#define IS_RESPONSE_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_RESPONSE))
#define RESPONSE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_RESPONSE, ResponseClass))

/* struct Request */
struct _Request
{ 
  ThriftStruct parent; 

  /* public */
  gint32 command_type;
  gboolean __isset_command_type;
  Node * node;
  gboolean __isset_node;
  Node * node_updates;
  gboolean __isset_node_updates;
};
typedef struct _Request Request;

struct _RequestClass
{
  ThriftStructClass parent;
};
typedef struct _RequestClass RequestClass;

GType request_get_type (void);
#define TYPE_REQUEST (request_get_type())
#define REQUEST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_REQUEST, Request))
#define REQUEST_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_REQUEST, RequestClass))
#define IS_REQUEST(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_REQUEST))
#define IS_REQUEST_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_REQUEST))
#define REQUEST_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_REQUEST, RequestClass))

/* constants */

/* struct TestPingArgs */
struct _TestPingArgs
{ 
  ThriftStruct parent; 

  /* public */
  Request * request;
  gboolean __isset_request;
};
typedef struct _TestPingArgs TestPingArgs;

struct _TestPingArgsClass
{
  ThriftStructClass parent;
};
typedef struct _TestPingArgsClass TestPingArgsClass;

GType test_ping_args_get_type (void);
#define TYPE_TEST_PING_ARGS (test_ping_args_get_type())
#define TEST_PING_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_TEST_PING_ARGS, TestPingArgs))
#define TEST_PING_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_TEST_PING_ARGS, TestPingArgsClass))
#define IS_TEST_PING_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_TEST_PING_ARGS))
#define IS_TEST_PING_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_TEST_PING_ARGS))
#define TEST_PING_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_TEST_PING_ARGS, TestPingArgsClass))

/* struct TestPingResult */
struct _TestPingResult
{ 
  ThriftStruct parent; 

  /* public */
  Response * success;
  gboolean __isset_success;
};
typedef struct _TestPingResult TestPingResult;

struct _TestPingResultClass
{
  ThriftStructClass parent;
};
typedef struct _TestPingResultClass TestPingResultClass;

GType test_ping_result_get_type (void);
#define TYPE_TEST_PING_RESULT (test_ping_result_get_type())
#define TEST_PING_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_TEST_PING_RESULT, TestPingResult))
#define TEST_PING_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_TEST_PING_RESULT, TestPingResultClass))
#define IS_TEST_PING_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_TEST_PING_RESULT))
#define IS_TEST_PING_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_TEST_PING_RESULT))
#define TEST_PING_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_TEST_PING_RESULT, TestPingResultClass))

#endif /* GENERATOR_TYPES_H */
